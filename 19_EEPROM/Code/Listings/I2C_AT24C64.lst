C51 COMPILER V9.60.7.0   I2C_AT24C64                                                       06/13/2024 20:14:45 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE I2C_AT24C64
OBJECT MODULE PLACED IN .\Objects\I2C_AT24C64.obj
COMPILER INVOKED BY: F:\C51\BIN\C51.EXE I2C_AT24C64.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\I2C_A
                    -T24C64.lst) TABS(2) OBJECT(.\Objects\I2C_AT24C64.obj)

line level    source

   1          #include<reg51.h>
   2          #define eeprom_addr 0xA0
   3          #define rtc_addr 0xD0
   4          
   5          sbit SCL=P2^0;
   6          sbit SDA=P2^1;
   7          
   8          
   9          void delay(unsigned int d)
  10          { while(d--);
  11   1      }
  12          
  13          void i2c_start()
  14          { SDA=1;
  15   1        SCL=1;
  16   1        while(SCL==0);
  17   1        SDA=0;
  18   1        SCL=0;
  19   1      }
  20          void i2c_stop()
  21          { SDA=0;
  22   1        SCL=1;
  23   1        while(SCL==0);
  24   1        SDA=1;
  25   1        SCL=0;
  26   1      }
  27          void i2c_write(char dat)
  28          { char c;
  29   1        for(c=0; c<8; c++)
  30   1        { if(dat & 0x80 == 0x80)
  31   2            SDA=1;
  32   2          else  
  33   2            SDA=0;
  34   2          SCL=1;
  35   2          while(SCL==0);
  36   2          SCL=0;    
  37   2          dat=dat<<1;
  38   2        }
  39   1        delay(5000);
  40   1      }
  41          void i2c_ack()
  42          { SDA=1;
  43   1        SCL=1;
  44   1        while(SCL==0);
  45   1        SCL=0;
  46   1        SDA=0;
  47   1      }
  48            
  49          void rtc_write(char addr, char dat)
  50          { i2c_start();
  51   1        i2c_write(rtc_addr);
  52   1        i2c_ack();
  53   1        i2c_write(addr);
  54   1        i2c_ack();
C51 COMPILER V9.60.7.0   I2C_AT24C64                                                       06/13/2024 20:14:45 PAGE 2   

  55   1        i2c_write(dat);
  56   1        i2c_ack();
  57   1        i2c_stop(); 
  58   1      }
  59          /*
  60          void eeprom64_write(int addr, char dat)
  61          { i2c_start();
  62            i2c_write(eeprom_addr);
  63            i2c_ack();
  64            i2c_write(addr/256);
  65            i2c_ack();
  66            i2c_write(addr%256);
  67            i2c_ack();
  68            i2c_write(dat);
  69            i2c_ack();
  70            i2c_stop(); 
  71          }
  72          */
  73          void main()
  74          { delay(500000);
  75   1        delay(500000);
  76   1      //  eeprom64_write(0x0000,'A');
  77   1        while(1)
  78   1          rtc_write(0x39,'A');
  79   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    133    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
